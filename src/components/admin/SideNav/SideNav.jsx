import { Link, useLocation } from 'react-router-dom';
import Logo from "../../../assets/Jiffy-logo.png"
import ByeWindLogo from "../../../assets/byewind-logo.png"
import './SideNav.css';

// SVG Icon Components
const OverviewIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M9.37514 10.9153C9.48918 10.8495 9.58387 10.7548 9.6497 10.6407C9.71553 10.5267 9.75017 10.3973 9.75014 10.2656V3.51563C9.74947 3.39605 9.72022 3.27837 9.66483 3.1724C9.60944 3.06643 9.52951 2.97523 9.43171 2.90643C9.33392 2.83762 9.22109 2.7932 9.10263 2.77686C8.98418 2.76052 8.86353 2.77274 8.75076 2.8125C6.56168 3.58726 4.72075 5.11748 3.5589 7.12807C2.39706 9.13865 1.9905 11.4977 2.41232 13.7813C2.43419 13.8993 2.48409 14.0104 2.55783 14.1052C2.63157 14.2 2.72699 14.2757 2.83607 14.3259C2.93438 14.3719 3.04162 14.3956 3.15014 14.3953C3.28177 14.3954 3.41111 14.3608 3.52514 14.295L9.37514 10.9153ZM8.25014 4.65188V9.8325L3.76139 12.4228C3.75014 12.2812 3.75014 12.1388 3.75014 12C3.75147 10.4797 4.17229 8.98928 4.96626 7.69279C5.76023 6.3963 6.89656 5.34404 8.25014 4.65188ZM21.7501 12C21.7509 14.1404 21.0473 16.2216 19.7478 17.9225C18.4484 19.6234 16.6254 20.8493 14.56 21.4113C12.4947 21.9733 10.3018 21.84 8.31973 21.0321C6.33765 20.2241 4.67652 18.7863 3.59264 16.9406C3.54211 16.8554 3.50898 16.761 3.49516 16.6628C3.48134 16.5647 3.48711 16.4648 3.51213 16.3689C3.53715 16.273 3.58092 16.183 3.64092 16.1041C3.70092 16.0253 3.77596 15.9591 3.8617 15.9094L11.2501 11.6091V3C11.2501 2.80109 11.3292 2.61032 11.4698 2.46967C11.6105 2.32902 11.8012 2.25 12.0001 2.25C13.7016 2.25087 15.3732 2.69675 16.849 3.54338C18.3249 4.39001 19.5536 5.60794 20.4133 7.07625C20.4236 7.09125 20.433 7.10625 20.4423 7.12219C20.4517 7.13813 20.4611 7.15688 20.4695 7.17375C21.3108 8.64297 21.7523 10.307 21.7501 12Z" fill="black"/>
    </svg>
);

const CalendarIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M20.25 6.75H12.2494L9.64875 4.8C9.38962 4.60565 9.07454 4.50041 8.75062 4.5H3.75C3.35218 4.5 2.97064 4.65804 2.68934 4.93934C2.40804 5.22064 2.25 5.60218 2.25 6V18.75C2.25 19.1478 2.40804 19.5294 2.68934 19.8107C2.97064 20.092 3.35218 20.25 3.75 20.25H20.25C20.6478 20.25 21.0294 20.092 21.3107 19.8107C21.592 19.5294 21.75 19.1478 21.75 18.75V8.25C21.75 7.85218 21.592 7.47064 21.3107 7.18934C21.0294 6.90804 20.6478 6.75 20.25 6.75ZM3.75 6H8.75062L10.7503 7.5L8.74969 9H3.75V6Z" fill="black"/>
    </svg>
);

const ProfileIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M18.75 2.25H5.25C4.85218 2.25 4.47064 2.40804 4.18934 2.68934C3.90804 2.97064 3.75 3.35218 3.75 3.75V20.25C3.75 20.6478 3.90804 21.0294 4.18934 21.3107C4.47064 21.592 4.85218 21.75 5.25 21.75H18.75C19.1478 21.75 19.5294 21.592 19.8107 21.3107C20.092 21.0294 20.25 20.6478 20.25 20.25V3.75C20.25 3.35218 20.092 2.97064 19.8107 2.68934C19.5294 2.40804 19.1478 2.25 18.75 2.25ZM9 4.5H15C15.1989 4.5 15.3897 4.57902 15.5303 4.71967C15.671 4.86032 15.75 5.05109 15.75 5.25C15.75 5.44891 15.671 5.63968 15.5303 5.78033C15.3897 5.92098 15.1989 6 15 6H9C8.80109 6 8.61032 5.92098 8.46967 5.78033C8.32902 5.63968 8.25 5.44891 8.25 5.25C8.25 5.05109 8.32902 4.86032 8.46967 4.71967C8.61032 4.57902 8.80109 4.5 9 4.5ZM16.9509 18.6C16.8721 18.6592 16.7824 18.7024 16.6869 18.7269C16.5914 18.7514 16.492 18.7569 16.3944 18.7429C16.2968 18.729 16.2028 18.696 16.118 18.6457C16.0332 18.5954 15.9591 18.5289 15.9 18.45C15.4459 17.8445 14.8571 17.3531 14.1802 17.0147C13.5032 16.6762 12.7568 16.5 12 16.5C11.2432 16.5 10.4968 16.6762 9.81983 17.0147C9.14291 17.3531 8.55409 17.8445 8.1 18.45C8.04091 18.5288 7.96687 18.5952 7.88212 18.6454C7.79737 18.6955 7.70357 18.7285 7.60607 18.7425C7.50856 18.7564 7.40927 18.751 7.31386 18.7265C7.21845 18.7021 7.12879 18.6591 7.05 18.6C6.97121 18.5409 6.90482 18.4669 6.85464 18.3821C6.80446 18.2974 6.77147 18.2036 6.75754 18.1061C6.74361 18.0086 6.74902 17.9093 6.77346 17.8139C6.79791 17.7185 6.8409 17.6288 6.9 17.55C7.56411 16.6596 8.44971 15.9586 9.46875 15.5166C8.91029 15.0067 8.51903 14.3399 8.34631 13.6037C8.17359 12.8675 8.22749 12.0962 8.50093 11.3912C8.77436 10.6862 9.25456 10.0803 9.87851 9.65304C10.5025 9.2258 11.241 8.99718 11.9972 8.99718C12.7534 8.99718 13.4919 9.2258 14.1159 9.65304C14.7398 10.0803 15.22 10.6862 15.4934 11.3912C15.7669 12.0962 15.8208 12.8675 15.6481 13.6037C15.4753 14.3399 15.0841 15.0067 14.5256 15.5166C15.5467 15.9577 16.4343 16.6588 17.1 17.55C17.2194 17.709 17.2708 17.909 17.2429 18.1059C17.2149 18.3028 17.1099 18.4805 16.9509 18.6ZM14.25 12.75C14.25 13.195 14.118 13.63 13.8708 14C13.6236 14.37 13.2722 14.6584 12.861 14.8287C12.4499 14.999 11.9975 15.0436 11.561 14.9568C11.1246 14.87 10.7237 14.6557 10.409 14.341C10.0943 14.0263 9.88005 13.6254 9.79323 13.189C9.70642 12.7525 9.75097 12.3001 9.92127 11.889C10.0916 11.4778 10.38 11.1264 10.75 10.8792C11.12 10.632 11.555 10.5 12 10.5C12.5967 10.5 13.169 10.7371 13.591 11.159C14.0129 11.581 14.25 12.1533 14.25 12.75Z" fill="black"/>
    </svg>
);

const InvoicesIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M10.5 11.25C10.5 11.5467 10.412 11.8367 10.2472 12.0834C10.0824 12.33 9.84811 12.5223 9.57403 12.6358C9.29994 12.7494 8.99834 12.7791 8.70736 12.7212C8.41639 12.6633 8.14912 12.5204 7.93934 12.3107C7.72956 12.1009 7.5867 11.8336 7.52882 11.5426C7.47094 11.2517 7.50065 10.9501 7.61418 10.676C7.72771 10.4019 7.91997 10.1676 8.16665 10.0028C8.41332 9.83797 8.70333 9.75 9 9.75C9.39782 9.75 9.77936 9.90804 10.0607 10.1893C10.342 10.4706 10.5 10.8522 10.5 11.25ZM21.75 5.25V18.75C21.75 19.1478 21.592 19.5294 21.3107 19.8107C21.0294 20.092 20.6478 20.25 20.25 20.25H3.75C3.35218 20.25 2.97064 20.092 2.68934 19.8107C2.40804 19.5294 2.25 19.1478 2.25 18.75V5.25C2.25 4.85218 2.40804 4.47064 2.68934 4.18934C2.97064 3.90804 3.35218 3.75 3.75 3.75H20.25C20.6478 3.75 21.0294 3.90804 21.3107 4.18934C21.592 4.47064 21.75 4.85218 21.75 5.25ZM12.7266 15.5625C12.4839 14.6563 11.9084 13.875 11.115 13.3744C11.5363 12.9555 11.8238 12.421 11.941 11.8386C12.0582 11.2562 11.9999 10.652 11.7733 10.1028C11.5468 9.55361 11.1623 9.08402 10.6686 8.75358C10.1748 8.42315 9.5941 8.24675 9 8.24675C8.4059 8.24675 7.82517 8.42315 7.33143 8.75358C6.8377 9.08402 6.45319 9.55361 6.22666 10.1028C6.00012 10.652 5.94175 11.2562 6.05896 11.8386C6.17616 12.421 6.46366 12.9555 6.885 13.3744C6.09211 13.8755 5.51681 14.6566 5.27344 15.5625C5.22371 15.7552 5.25257 15.9598 5.35366 16.1312C5.45475 16.3026 5.6198 16.4268 5.8125 16.4766C6.0052 16.5263 6.20975 16.4974 6.38118 16.3963C6.55259 16.2952 6.67683 16.1302 6.72656 15.9375C6.97406 14.9766 7.95094 14.25 9 14.25C10.0491 14.25 11.0269 14.9747 11.2734 15.9375C11.3232 16.1302 11.4474 16.2952 11.6188 16.3963C11.7902 16.4974 11.9948 16.5263 12.1875 16.4766C12.3802 16.4268 12.5452 16.3026 12.6463 16.1312C12.7474 15.9598 12.7763 15.7552 12.7266 15.5625ZM18.75 13.5C18.75 13.3011 18.671 13.1103 18.5303 12.9697C18.3897 12.829 18.1989 12.75 18 12.75H14.25C14.0511 12.75 13.8603 12.829 13.7197 12.9697C13.579 13.1103 13.5 13.3011 13.5 13.5C13.5 13.6989 13.579 13.8897 13.7197 14.0303C13.8603 14.171 14.0511 14.25 14.25 14.25H18C18.1989 14.25 18.3897 14.171 18.5303 14.0303C18.671 13.8897 18.75 13.6989 18.75 13.5ZM18.75 10.5C18.75 10.3011 18.671 10.1103 18.5303 9.96967C18.3897 9.82902 18.1989 9.75 18 9.75H14.25C14.0511 9.75 13.8603 9.82902 13.7197 9.96967C13.579 10.1103 13.5 10.3011 13.5 10.5C13.5 10.6989 13.579 10.8897 13.7197 11.0303C13.8603 11.171 14.0511 11.25 14.25 11.25H18C18.1989 11.25 18.3897 11.171 18.5303 11.0303C18.671 10.8897 18.75 10.6989 18.75 10.5Z" fill="black"/>
    </svg>
);

const ClientsIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M6.01077 13.8563C6.01332 13.9071 6.0055 13.9579 5.98779 14.0055C5.97009 14.0532 5.94287 14.0968 5.90779 14.1336C5.87271 14.1705 5.83051 14.1998 5.78374 14.2198C5.73698 14.2398 5.68664 14.2501 5.63577 14.25H1.49952C1.33024 14.2503 1.16586 14.1933 1.03309 14.0882C0.900326 13.9832 0.806995 13.8364 0.768272 13.6716C0.74416 13.5588 0.745272 13.4421 0.771527 13.3297C0.797782 13.2174 0.848532 13.1123 0.920147 13.0219C1.58184 12.1444 2.45979 11.4535 3.46827 11.0166C3.02552 10.6129 2.68593 10.109 2.47797 9.54709C2.27 8.98517 2.19971 8.38161 2.27297 7.78694C2.34624 7.19228 2.56092 6.62382 2.89906 6.12919C3.23719 5.63456 3.68893 5.22815 4.21642 4.944C4.74392 4.65986 5.33183 4.50624 5.9309 4.49603C6.52998 4.48581 7.12278 4.6193 7.65966 4.8853C8.19654 5.1513 8.66186 5.54207 9.01666 6.02489C9.37146 6.50771 9.6054 7.06851 9.6989 7.66033C9.71097 7.73992 9.69671 7.82127 9.6583 7.89201C9.61988 7.96275 9.55941 8.019 9.48608 8.05221C8.44583 8.53312 7.56483 9.30156 6.94706 10.2668C6.32928 11.2321 6.00051 12.354 5.99952 13.5C5.99952 13.62 5.99952 13.7381 6.01077 13.8563ZM23.0733 13.021C22.4131 12.1445 21.5372 11.4539 20.5308 11.0166C20.9735 10.6129 21.3131 10.109 21.5211 9.54709C21.729 8.98517 21.7993 8.38161 21.7261 7.78694C21.6528 7.19228 21.4381 6.62382 21.1 6.12919C20.7619 5.63456 20.3101 5.22815 19.7826 4.944C19.2551 4.65986 18.6672 4.50624 18.0681 4.49603C17.4691 4.48581 16.8763 4.6193 16.3394 4.8853C15.8025 5.1513 15.3372 5.54207 14.9824 6.02489C14.6276 6.50771 14.3936 7.06851 14.3001 7.66033C14.2881 7.73992 14.3023 7.82127 14.3407 7.89201C14.3792 7.96275 14.4396 8.019 14.513 8.05221C15.5532 8.53312 16.4342 9.30156 17.052 10.2668C17.6698 11.2321 17.9985 12.354 17.9995 13.5C17.9995 13.62 17.9995 13.7381 17.9883 13.8563C17.9857 13.9071 17.9935 13.9579 18.0112 14.0055C18.029 14.0532 18.0562 14.0968 18.0912 14.1336C18.1263 14.1705 18.1685 14.1998 18.2153 14.2198C18.2621 14.2398 18.3124 14.2501 18.3633 14.25H22.4995C22.6688 14.2503 22.8332 14.1933 22.966 14.0882C23.0987 13.9832 23.192 13.8364 23.2308 13.6716C23.255 13.5586 23.2539 13.4416 23.2275 13.3291C23.2011 13.2166 23.15 13.1113 23.078 13.021H23.0733ZM14.7295 17.0691C15.4763 16.4972 16.0251 15.7056 16.2987 14.8057C16.5724 13.9058 16.5572 12.9428 16.2553 12.0519C15.9534 11.1611 15.3799 10.3873 14.6154 9.83924C13.851 9.29118 12.934 8.99644 11.9934 8.99644C11.0528 8.99644 10.1359 9.29118 9.37142 9.83924C8.60699 10.3873 8.0335 11.1611 7.73157 12.0519C7.42964 12.9428 7.41444 13.9058 7.68811 14.8057C7.96178 15.7056 8.51057 16.4972 9.25733 17.0691C7.93221 17.6432 6.82571 18.6265 6.09983 19.875C6.034 19.989 5.99935 20.1184 5.99935 20.2501C5.99936 20.3817 6.03403 20.5111 6.09988 20.6251C6.16572 20.7391 6.26042 20.8338 6.37446 20.8996C6.4885 20.9654 6.61786 21.0001 6.74952 21H17.2495C17.3812 21.0001 17.5105 20.9654 17.6246 20.8996C17.7386 20.8338 17.8333 20.7391 17.8992 20.6251C17.965 20.5111 17.9997 20.3817 17.9997 20.2501C17.9997 20.1184 17.965 19.989 17.8992 19.875C17.1718 18.6257 16.0632 17.6423 14.7361 17.0691H14.7295Z" fill="black"/>
    </svg>
);

const SocialIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
      <path d="M15.8972 6.80531C15.2184 5.21621 14.0118 3.91023 12.4812 3.10816C10.9506 2.3061 9.19006 2.05715 7.49712 2.40341C5.80418 2.74967 4.28274 3.6699 3.19001 5.00851C2.09727 6.34713 1.5003 8.02201 1.5 9.75V15.9375C1.5 16.2856 1.63828 16.6194 1.88442 16.8656C2.13056 17.1117 2.4644 17.25 2.8125 17.25H8.12531C8.71058 18.5865 9.67231 19.7238 10.8931 20.5229C12.1139 21.322 13.5409 21.7484 15 21.75H21.1875C21.5356 21.75 21.8694 21.6117 22.1156 21.3656C22.3617 21.1194 22.5 20.7856 22.5 20.4375V14.25C22.4996 12.4165 21.8277 10.6466 20.6111 9.27491C19.3945 7.90319 17.7175 7.02464 15.8972 6.80531ZM21 20.25H15C13.939 20.2488 12.8973 19.9669 11.9805 19.4329C11.0637 18.8989 10.3045 18.1319 9.78 17.2097C10.8072 17.1031 11.8013 16.7853 12.6999 16.2763C13.5985 15.7673 14.3822 15.078 15.0018 14.2517C15.6213 13.4255 16.0634 12.48 16.3003 11.4748C16.5371 10.4696 16.5636 9.42627 16.3781 8.41031C17.6937 8.72078 18.8659 9.46638 19.7048 10.5263C20.5436 11.5862 21 12.8983 21 14.25V20.25Z" fill="black"/>
    </svg>
);

const InboxIcon = () => (
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="19" viewBox="0 0 20 19" fill="none">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M9.58403 0.375962C9.83596 0.208013 10.1642 0.208013 10.4161 0.375962L19.4161 6.37596C19.6247 6.51506 19.7501 6.74924 19.7501 7V16.75C19.7501 17.1478 19.592 17.5294 19.3107 17.8107C19.0294 18.092 18.6479 18.25 18.2501 18.25H1.75006C1.35224 18.25 0.970704 18.092 0.689399 17.8107C0.408094 17.5294 0.250059 17.1478 0.250059 16.75V7C0.250059 6.74924 0.375385 6.51506 0.584034 6.37596L9.58403 0.375962ZM1.75006 7.40139V16.75H18.2501V7.40139L10.0001 1.90139L1.75006 7.40139Z" fill="black"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M8.97196 11.8172C9.21099 12.1555 9.13052 12.6235 8.79223 12.8625L1.66723 17.8969C1.32894 18.1359 0.860936 18.0555 0.621909 17.7172C0.382882 17.3789 0.463348 16.9109 0.801637 16.6719L7.92664 11.6375C8.26493 11.3984 8.73293 11.4789 8.97196 11.8172Z" fill="black"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M11.0282 11.8172C11.2672 11.4789 11.7352 11.3984 12.0735 11.6375L19.1985 16.6719C19.5368 16.9109 19.6172 17.3789 19.3782 17.7172C19.1392 18.0555 18.6712 18.1359 18.3329 17.8969L11.2079 12.8625C10.8696 12.6235 10.7891 12.1555 11.0282 11.8172Z" fill="black"/>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M0.389496 6.56444C0.630049 6.22723 1.09841 6.14888 1.43562 6.38944L8.59953 11.5H11.4006L18.5645 6.38944C18.9017 6.14888 19.3701 6.22723 19.6106 6.56444C19.8512 6.90164 19.7728 7.37001 19.4356 7.61056L12.0762 12.8606C11.9491 12.9513 11.7968 13 11.6407 13H8.35943C8.20327 13 8.051 12.9513 7.92387 12.8606L0.564498 7.61056C0.227293 7.37001 0.148942 6.90164 0.389496 6.56444Z" fill="black"/>
</svg>
);

// eslint-disable-next-line no-unused-vars
const SideNav = ({ isCollapsed, onToggle }) => {
  const location = useLocation();
  
  // Check if we're on mobile
  const isMobile = window.innerWidth <= 768;
  
  // On mobile, always show expanded sidenav
  const shouldCollapse = isCollapsed && !isMobile;

  const menuItems = [
    {
      id: 'overview',
      icon: <OverviewIcon />,
      label: 'Overview',
      path: '/admin',
      active: location.pathname === '/admin'
    },
    {
      id: 'calendar',
      icon: <CalendarIcon />,
      label: 'Calendar',
      path: '/admin/calendar',
      active: location.pathname === '/admin/calendar'
    },
    {
      id: 'profile',
      icon: <ProfileIcon />,
      label: 'User Profile',
      path: '/admin/profile',
      active: location.pathname === '/admin/profile'
    },
    {
      id: 'invoices',
      icon: <InvoicesIcon />,
      label: 'Invoices',
      path: '/admin/invoices',
      active: location.pathname === '/admin/invoices'
    },
    {
      id: 'clients',
      icon: (
        <>
          <ClientsIcon />
          <span className="notification-badge">12</span>
        </>
      ),
      label: 'Clients',
      path: '/admin/clients',
      active: location.pathname === '/admin/clients'
    },
    {
      id: 'social',
      icon: <SocialIcon />,
      label: 'Social',
      path: '/admin/social',
      active: location.pathname === '/admin/social'
    },
    {
      id: 'inbox',
      icon: <InboxIcon />,
      label: 'inbox',
      path: '/admin/inbox',
      active: location.pathname === '/admin/inbox'
    },
  ];

  return (
    <div className={`sidenav ${shouldCollapse ? 'collapsed' : ''}`}>
      <div className="sidenav-header">
        <div className="logo">
          <div className="logo-icon">
            <img src={Logo} alt="" />
          </div>
        </div>
        {isMobile && (
          <button 
            className="mobile-close-btn"
            onClick={onToggle}
            aria-label="Close menu"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none">
              <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </button>
        )}
      </div>

      <nav className="sidenav-menu">
        {menuItems.map((item) => (
          <Link
            key={item.id}
            to={item.path}
            className={`menu-item ${item.active ? 'active' : ''}`}
            title={shouldCollapse ? item.label : ''}
            onClick={() => {
              // Close mobile menu when a menu item is clicked
              if (isMobile) {
                onToggle();
              }
            }}
          >
            <span className="menu-icon">{item.icon}</span>
            {!shouldCollapse && <span className="menu-label">{item.label}</span>}
          </Link>
        ))}
      </nav>

      <div className="sidenav-footer">
          <div className="byewind-logo">
                <div className="byewind-logo-icon">
                  <img src={ByeWindLogo} alt="" />
                </div>
          </div>
          {!shouldCollapse && <span className="footer-text">ByeWind</span>}
      </div>
    </div>
  );
};

export default SideNav;